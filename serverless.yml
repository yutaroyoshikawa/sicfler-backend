# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: sicfler # NOTE: update this with your service name
#app: your-app-name
#tenant: your-tenant-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

custom:
  webpack:
    webpackConfig: webpack.config.js
    includeModules: true

plugins:
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  region: ap-northeast-1
  iamRoleStatements:
    - Effect: Allow
      Action: 
        - dynamodb:*
        - s3:*
        - cognito-idp:*
        - cognito-identity:*
      Resource: 
        - "arn:aws:dynamodb:${self:provider.region}:*:table/*"
        - "arn:aws:cognito-identity:ap-northeast-1:178491375442:identitypool/ap-northeast-1_exQyDhJTD"
        - "arn:aws:cognito-identity:ap-northeast-1:178491375442:identitypool/ap-northeast-1:exQyDhJTD"
        - "arn:aws:cognito-idp:ap-northeast-1:178491375442:userpool/*"
        - "arn:aws:cognito-identity:ap-northeast-1:178491375442:identitypool/ap-northeast-1:ad5c517b-f1a0-4abe-abd1-857916f1f80c"
        - "arn:aws:cognito-idp:ap-northeast-1:178491375442:userpool/ap-northeast-1_exQyDhJTD"

functions:
  graphql:
    handler: index.graphql
    events:
    - http:
        path: graphql
        method: post
        cors: true
    - http:
        path: graphql
        method: get
        cors: true
    environment:
      TZ: Asia/Tokyo

# you can add CloudFormation resource templates here
Outputs:
  StaticContentsCloudFrontUrl:
    Value:
      Fn::Join:
        - ""
        - - "https://"
          - Fn::GetAtt:
            - StaticContentsCloudFront
            - DomainName

resources:
 Resources:
    Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: "${self:service}-bucket"
    Admin:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: "${self:service}-admin"
    AdminS3Policy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: Admin
        PolicyDocument:
          Statement:
            - Effect: Allow
              Principal:
                AWS:
                  Fn::Join:
                    - " "
                    - - "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity"
                      - Ref: StaticCloudFrontOriginAccessIdentity
              Action: s3:GetObject
              Resource:
                Fn::Join:
                  - "/"
                  - - Fn::GetAtt:
                        - Admin
                        - Arn
                    - "*"
    StaticContentsCloudFront:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Enabled: true
          Comment: "Delivery static contents"
          PriceClass: PriceClass_200
          DefaultRootObject: index.html
          Origins:
            - Id: S3Origin
              DomainName:
                Fn::GetAtt:
                  - Admin
                  - DomainName
              S3OriginConfig:
                OriginAccessIdentity:
                  Fn::Join:
                    - "/"
                    - - origin-access-identity/cloudfront
                      - Ref: StaticCloudFrontOriginAccessIdentity
          DefaultCacheBehavior:
            AllowedMethods:
              - HEAD
              - GET
            CachedMethods:
              - HEAD
              - GET
            Compress: true
            DefaultTTL: 900
            MaxTTL: 1200
            MinTTL: 600
            ForwardedValues:
              QueryString: true
            SmoothStreaming: false
            TargetOriginId: S3Origin
            ViewerProtocolPolicy: https-only
    StaticCloudFrontOriginAccessIdentity:
      Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
      Properties:
        CloudFrontOriginAccessIdentityConfig:
          Comment:
            Ref: AWS::StackName
    PostsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: "${self:service}-posts"
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    OrnersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: "${self:service}-orners"
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
