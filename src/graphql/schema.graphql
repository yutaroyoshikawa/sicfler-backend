scalar DateTime

enum Roles {
  admin
  orner
  user
}

type User {
  id: ID!
  creationDate: DateTime!
  lastModifiedDate: DateTime
  email: String!
  role: Roles!
}

type ReturnDelete {
  id: ID!
}

type Geolocation {
  xIndex: Float
  yIndex: Float
}

type Orner {
  id: ID!
  email: String!
  name: String!
  discription: String
  icon: String
  images: [String]!
  address: String
  location: Geolocation
}

type Visitor {
  visitorName: String!
  discription: String
  sumbnail: String
}

type Target {
  ageGroup: Int
  gender: Int
}

type Post {
  id: ID!
  name: String!
  start: DateTime!
  finish: DateTime!
  discription: String
  sumbnail: String
  images: [String]!
  visitors: [Visitor]!
  orner: Orner!
  address: String
  location: Geolocation
  target: Target!
}

input GeolocationInput {
  xIndex: Float
  yIndex: Float
}

input TargetInput {
  ageGroup: Int
  gender: Int
}

type Query {
  myInfo: User!
  user(id: ID!): User!
  users: [User]!
  orner(id: ID!): Orner!
  orners: [Orner]!
  post(id: ID!): Post!
  posts(ornerId: ID): [Post]!
}

type Mutation {
  addUser(email: String!, password: String!): User!
  updateUser(id: ID!, email: String!, role: Roles!): User!
  deleteUser(id: ID!): ReturnDelete!
  addOrner(
    id: ID!
    email: String!,
    name: String!,
    discription: String,
    icon: String,
    images: [String]!,
    address: String,
    location: GeolocationInput
  ): Orner!
  updateOrner(
    id: ID!,
    email: ID,
    name: String,
    discription: String,
    icon: String,
    images: [String],
    address: String,
    location: GeolocationInput
  ): Orner!
  deleteOrner(id: ID!): ReturnDelete!
  addPost(
    name: String!,
    start: DateTime!,
    finish: DateTime!,
    discription: String,
    sumbnail: String,
    images: [String]!,
    ornerId: String!,
    address: String,
    location: GeolocationInput
    target: TargetInput!
  ): Post!
  updatePost(
    id: ID!
    name: String!,
    start: DateTime!,
    finish: DateTime!,
    discription: String,
    sumbnail: String,
    images: [String]!,
    ornerId: String!,
    address: String,
    location: GeolocationInput
    target: TargetInput!
  ): Post!
  deletePost(id: ID!): ReturnDelete!
}
